#!/bin/bash

r='\e[91m'
g='\e[92m'
y='\e[93m'
b='\e[94m'
p='\e[95m'
c='\e[96m'
w='\e[97m'
n='\e[0m'
reset_color() {
	tput sgr0   # reset attributes
	tput op     # reset color
	return
}

HOST='127.0.0.1'
PORT='8080'

pkgs=(proot curl php)
for pkg in "${pkgs[@]}"; do
 if [[ $(command -v ${pkg}) ]]; then
    echo -ne ""
    else
    pkg install ${pkg}
fi
done

kill_pid() {
	check_PID="php cloudflared"
	for process in ${check_PID}; do
		if [[ $(pidof ${process}) ]]; then # Check for Process
			killall ${process} > /dev/null 2>&1 # Kill the Process
		fi
	done
}

banner() {
 echo -ne "\n\n${g}██████╗░██╗██████╗░████████╗██╗░░██╗██████╗░░█████╗░██╗░░░██╗
██╔══██╗██║██╔══██╗╚══██╔══╝██║░░██║██╔══██╗██╔══██╗╚██╗░██╔╝
██████╦╝██║██████╔╝░░░██║░░░███████║██║░░██║███████║░╚████╔╝░
██╔══██╗██║██╔══██╗░░░██║░░░██╔══██║██║░░██║██╔══██║░░╚██╔╝░░
██████╦╝██║██║░░██║░░░██║░░░██║░░██║██████╔╝██║░░██║░░░██║░░░
╚═════╝░╚═╝╚═╝░░╚═╝░░░╚═╝░░░╚═╝░░╚═╝╚═════╝░╚═╝░░╚═╝░░░╚═╝

░██╗░░░░░░░██╗██╗░██████╗██╗░░██╗
░██║░░██╗░░██║██║██╔════╝██║░░██║
░╚██╗████╗██╔╝██║╚█████╗░███████║
░░████╔═████║░██║░╚═══██╗██╔══██║   ${w}By RUR999+${g}
░░╚██╔╝░╚██╔╝░██║██████╔╝██║░░██║   ${w}Github: DH-Alamin${g}
░░░╚═╝░░░╚═╝░░╚═╝╚═════╝░╚═╝░░╚═╝\n\n\n${n}"
}


checkdir() {

if [[ ! -d ".server" ]]; then
	mkdir -p ".server"
fi

if [[ -d ".server/www" ]]; then
	rm -rf ".server/www"
	mkdir -p ".server/www"
else
	mkdir -p ".server/www"
fi

if [[ -e ".server/.cld.log" ]]; then
	rm -rf ".server/.cld.log"
fi
}

download() {
	url="$1"
	output="$2"
	file=`basename $url`
	if [[ -e "$file" || -e "$output" ]]; then
		rm -rf "$file" "$output"
	fi
	curl --silent --insecure --fail --retry-connrefused \
		--retry 3 --retry-delay 2 --location --output "${file}" "${url}"

	if [[ -e "$file" ]]; then
		if [[ ${file#*.} == "zip" ]]; then
			unzip -qq $file > /dev/null 2>&1
			mv -f $output .server/$output > /dev/null 2>&1
		elif [[ ${file#*.} == "tgz" ]]; then
			tar -zxf $file > /dev/null 2>&1
			mv -f $output .server/$output > /dev/null 2>&1
		else
			mv -f $file .server/$output > /dev/null 2>&1
		fi
		chmod +x .server/$output > /dev/null 2>&1
		rm -rf "$file"
	else
		echo -e "\n${w}[${r}-${w}]${r} Error occured while downloading ${output}."
		{ reset_color; exit 1; }
	fi
}


install_cloudflared() {
	if [[ -e ".server/cloudflared" ]]; then
		echo -e ""
	else
		echo -e "${w}[${g}+${w}]${g} Installing Cloudflared...${n}"
		arch=`uname -m`
		if [[ ("$arch" == *'arm'*) || ("$arch" == *'Android'*) ]]; then
			download 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm' 'cloudflared'
		elif [[ "$arch" == *'aarch64'* ]]; then
			download 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm64' 'cloudflared'
		elif [[ "$arch" == *'x86_64'* ]]; then
			download 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64' 'cloudflared'
		else
			download 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-386' 'cloudflared'
		fi
	fi
}

start_cloudflared() { 
    rm .cld.log > /dev/null 2>&1 &  
	   { sleep 1; setup_site; }
	   if [[ `command -v termux-chroot` ]]; then
		  sleep 2 && termux-chroot ./.server/cloudflared tunnel -url "$HOST":"$PORT" --logfile .server/.cld.log > /dev/null 2>&1 &
	else
		sleep 2 && ./.server/cloudflared tunnel -url "$HOST":"$PORT" --logfile .server/.cld.log > /dev/null 2>&1 &
	fi
 sleep 8
	
	cldflr_link=$(grep -o 'https://[-0-9a-z]*\.trycloudflare.com' ".server/.cld.log")
	cldflr_link1=${cldflr_link#https://}
	echo -e "${w}[${g}+${w}]${w} Link : ${g}$cldflr_link${n}"
}


setup_site() {
	cp index.html .server/www
	cd .server/www && php -S "$HOST":"$PORT" > /dev/null 2>&1 & 
}


webdev() {
sl=(http://mpark.co.za http://mc3qs.com http://hq.prospec.co.th http://branch.prospec.co.th)
for site in "${sl[@]}"; do
		  curl -s -T ${name} ${site}
    cd=$( curl -s -o /dev/null ${site}/${name} -w %{http_code} )
    if [[ $cd == 200 ]] || [[ $cd == 201 ]]; then
        printf "\n"
        echo -e "${w}[${g}+${w}] ${w}Link: ${g}${site}/${name} >${cd}<${n}"
        continue
    else
        echo -e "${w}[${r}-${w}] ${w}Link: ${r}${site}/${name} >${cd}<${n}"
    fi
done
}



scan() {
    site=${1}
    name="${2}"
    if [ -f $FILE ]; then
   echo ""
else
   echo "${w}[${r}-${w}] ${r}HTML File Not Found!${n}"
   dmake
fi
    upload=$( curl -s -T ${name} ${site} )
    cd=$( curl -s -o /dev/null ${site}/${name} -w %{http_code} )
    if [[ $cd == 200 ]] || [[ $cd == 201 ]]; then
        printf "\n"
        echo -e "${w}[${g}+${w}] ${w}Link: ${g}${site}/${name} >${cd}<${n}"
    else
        echo -e "${w}[${r}-${w}] ${w}Link: ${r}${site}/${name} >${cd}<${n}"
    fi
}


ask() {

echo -ne "${w}>>> ${g}Enter Name ${w}:${g} "
read nam
echo -ne "${w}>>> ${g}Enter Chatbox Text ${w}:${g} "
read chatbox
echo -ne "${w}>>> ${g}Enter wishtext ${w}:${g} "
read wishtext
echo -ne "${w}>>> ${g}Enter IMG Link ${w}:${g} "
read img
echo -e "${n}"
}



dmake() {
rm -rf index.html
rm -rf .server/www/index.html
curl -s -o index.html https://raw.githubusercontent.com/DH-Alamin/file/main/index.html


cat >> index.html <<-EOF
<h1 class="one">
                Hi
                <span id="name">${nam}</span>
            </h1>
            <p class="two" id="greetingText">তোমাকে একটা কথা বলতে চাই!!!</p>
        </div>

        <div class="three">
            <p>আজকে তোমার জন্মদিন</p>
        </div>

        <div class="four">
            <div class="text-box">
                <p class="hbd-chatbox">
                ${chatbox}
                </p>
                <p class="fake-btn">okay...</p>
            </div>
        </div>

        <div class="five">
            <p class="idea-1">Thats what I was going to do.</p>
            <p class="idea-2">But then I stopped.</p>
            <p class="idea-3">
                I realised, I wanted to do something<br>
                <strong>special</strong>
            </p>
            <p class="idea-4">Because,</p>
            <p class="idea-5">
                You are Special For Me
                <span>:)</span>
            </p>
            <p class="idea-6">
                <span>S</span>
                <span>O</span>
            </p>
        </div>

        <div class="six">
            <img src="${img}" alt="profile" class="profile-picture" id="imagePath"/>
            <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/hat.svg" alt="hat" class="hat" />
            <div class="wish">
                <h3 class="wish-hbd">Happy Birthday!!!</h3>
                <h5 id="wishText">${wishtext}</h5>
            </div>
        </div>

        <div class="seven">
            <div class="baloons">
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon2.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon1.svg" alt="" />
                <img src="https://raw.githubusercontent.com/DH-Alamin/file/main/img/ballon3.svg" alt="" />
            </div>
        </div>

        <div class="eight">
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
            <svg viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">
                <circle cx="20" cy="20" r="20" />
            </svg>
        </div>

        <div class="nine">
            <p>Okay, now come back and tell me if you liked it.</p>
            <p>Or click reply, if you want to watch it again.</p>
            <p id="replay">REPLY</p>
            <p class="last-smile">:)</p>
            <br><br><br><br><br><br><br><p><a href="https://github.com/DH-Alamin">GitHub</a></p>
        </div>
    </div>

</body>
    <!-- Greensock -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.5/gsap.min.js"></script>
    <!-- Sweetalert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>    
</html>
EOF

}

kill_pid
clear
banner
ask
dmake
name="${nam}.html"
checkdir
install_cloudflared
start_cloudflared

